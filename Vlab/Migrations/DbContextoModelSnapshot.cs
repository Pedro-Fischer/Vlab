// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vlab.Infraestrutura.Db;

#nullable disable

namespace Vlab.Migrations
{
    [DbContext(typeof(DbContexto))]
    partial class DbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Vlab.Dominio.Entidades.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoAutor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasDiscriminator<string>("TipoAutor").HasValue("Autor");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("CriadorId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("CriadorId");

                    b.ToTable("Materiais");

                    b.HasDiscriminator<string>("TipoMaterial").HasValue("Material");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.AutorInstituicao", b =>
                {
                    b.HasBaseType("Vlab.Dominio.Entidades.Autor");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasDiscriminator().HasValue("Instituicao");
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.AutorPessoa", b =>
                {
                    b.HasBaseType("Vlab.Dominio.Entidades.Autor");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.ToTable("Autores", t =>
                        {
                            t.Property("Name")
                                .HasColumnName("AutorPessoa_Name");
                        });

                    b.HasDiscriminator().HasValue("Pessoa");
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.Artigo", b =>
                {
                    b.HasBaseType("Vlab.Dominio.Entidades.Material");

                    b.Property<string>("DOI")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasIndex("DOI")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Artigo");
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.Livro", b =>
                {
                    b.HasBaseType("Vlab.Dominio.Entidades.Material");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NumeroDePaginas")
                        .HasColumnType("int");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Livro");
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.Video", b =>
                {
                    b.HasBaseType("Vlab.Dominio.Entidades.Material");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("Vlab.Dominio.Entidades.Material", b =>
                {
                    b.HasOne("Vlab.Dominio.Entidades.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vlab.Dominio.Entidades.Usuario", "Criador")
                        .WithMany()
                        .HasForeignKey("CriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Criador");
                });
#pragma warning restore 612, 618
        }
    }
}
